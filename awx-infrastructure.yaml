AWSTemplateFormatVersion: 2010-09-09
Description: ECS cluster with Auto Scaling Group and ALB
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Availability Zone Configuration
        Parameters:
          - NumberOfAvailabilityZones
      - Label:
          default: Amazon ALB Configuration
        Parameters:
          - ALBSubnets
      - Label:
          default: Network Configuration
        Parameters:
          - VPC
          - RemoteAccessCIDR
          - RDSAccessCidr
      - Label:
          default: Amazon EC2 Configuration
        Parameters:
          - InstanceType
          - ClusterSize
          - ECSSubnets
          - KeyPairName
      - Label:
          default: Amazon RDS Configuration
        Parameters:
          - RDSSubnets
          - AllocatedStorageAndIops
          - AllowMajorVersionUpgrade
          - AutoMinorVersionUpgrade
          - DBInstanceClass
          - DBName
          - EngineVersion
          - MasterUsername
          - MasterUserPassword
          - MultiAZ
          - PortNumber
          - PubliclyAccessible
          - StorageType
Parameters:
  InstanceType:
    Description: Which instance type should we use to build the ECS cluster?
    Type: String
    Default: c4.2xlarge
  ClusterSize:
    Description: How many ECS hosts do you want to initially deploy?
    Type: Number
    Default: 2
  RemoteAccessCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Description: The CIDR IP range that is permitted to access AWX. We recommend that
      you set this value to a trusted IP range.
    Type: String
  ECSSubnets:
    Description: Choose which subnets this ECS cluster should be deployed to.
    Type: List<AWS::EC2::Subnet::Id>
  ALBSubnets:
    Description: Choose which subnets the Application Load Balancer should be deployed to.
    Type: List<AWS::EC2::Subnet::Id>
  RDSSubnets:
    Description: Choose which subnets the RDS Database should be deployed to.
    Type: List<AWS::EC2::Subnet::Id>
  VPC:
    Description: Choose which VPC this ECS cluster should be deployed to.
    Type: AWS::EC2::VPC::Id
  KeyPairName:
    Description: SSH KeyPair name
    Type: AWS::EC2::KeyPair::KeyName
    Default: ''
  RDSAccessCidr:
    Description: CIDR block to allow to connect to database.
      is blank
    Type: String
  AllocatedStorageAndIops:
    Description: Storage/IOPS to allocate.
    Type: String
    Default: 100 GB / 1,000 IOPS
    AllowedValues:
      - 100 GB / 1,000 IOPS
      - 300 GB / 3,000 IOPS
      - 600 GB / 6,000 IOPS
      - 1,000 GB / 10,000 IOPS
      - 1,500 GB / 15,000 IOPS
      - 2,000 GB / 20,000 IOPS
      - 3,000 GB / 30,000 IOPS
      - 4,000 GB / 40,000 IOPS
      - 6,000 GB / 60,000 IOPS
  AllowMajorVersionUpgrade:
    Description: If you update the EngineVersion property to a version that's different
      from the DB instance's current major version, set this property to true.
    Type: String
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'
  AutoMinorVersionUpgrade:
    Description: Indicates that minor engine upgrades are applied automatically to
      the DB instance during the maintenance window.
    Type: String
    Default: 'true'
    AllowedValues:
      - 'true'
      - 'false'
  DBInstanceClass:
    Description: The compute and memory capacity of the DB instance.
    Type: String
    Default: db.t2.medium
    AllowedValues:
      - db.m1.small
      - db.m1.medium
      - db.m1.large
      - db.m1.xlarge
      - db.m2.xlarge
      - db.m2.2xlarge
      - db.m2.4xlarge
      - db.m3.medium
      - db.m3.large
      - db.m3.xlarge
      - db.m3.2xlarge
      - db.m4.large
      - db.m4.xlarge
      - db.m4.2xlarge
      - db.m4.4xlarge
      - db.m4.10xlarge
      - db.r3.large
      - db.r3.xlarge
      - db.r3.2xlarge
      - db.r3.4xlarge
      - db.r3.8xlarge
      - db.t2.micro
      - db.t2.small
      - db.t2.medium
      - db.t2.large
  DBName:
    Description: The name of the database to create when the DB instance is created.
    Type: String
    MinLength: '1'
    MaxLength: '63'
    AllowedPattern: ^(?!^postgres$)[a-zA-Z_][a-zA-Z0-9_]*$
    ConstraintDescription: must contain from 1 to 63 alphanumeric characters, and
      not be reserved postgres term.
    Default: awx
  EngineVersion:
    Description: The version number of the database engine to use.
    Type: String
    Default: 9.6.3
    AllowedValues:
      - 9.3.12
      - 9.3.14
      - 9.3.16
      - 9.3.17
      - 9.4.7
      - 9.4.9
      - 9.4.11
      - 9.4.12
      - 9.5.2
      - 9.5.4
      - 9.5.6
      - 9.5.7
      - 9.6.1
      - 9.6.2
      - 9.6.3
  MasterUserPassword:
    Description: Master user database Password.
    Type: String
    NoEcho: 'true'
  MasterUsername:
    Description: Master database Username.
    Type: String
  MultiAZ:
    Description: Specifies if the database instance is a multiple Availability Zone
      deployment.
    Type: String
    Default: 'true'
    AllowedValues:
      - 'true'
      - 'false'
  NumberOfAvailabilityZones:
    Description: Quantity of subnets to use, if selecting more than 2 the region this
      stack is in must have at least that many Availability Zones.
    Type: String
    Default: '2'
    AllowedValues:
      - '2'
      - '3'
      - '4'
  PortNumber:
    Description: The port number for the database server to listen on
    Type: Number
    Default: '5432'
    MinValue: '1150'
    MaxValue: '65535'
  PubliclyAccessible:
    Description: Indicates whether the DB instance is an Internet-facing instance.
    Type: String
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'
  StorageType:
    Description: Specifies the storage type to be associated with the DB instance.
    Type: String
    Default: io1
    AllowedValues:
      - io1
      - gp2
      - standard
Mappings:
  AWSRegionToAMI:
    us-east-2:
      AMI: ami-1c002379
    us-east-1:
      AMI: ami-9eb4b1e5
    us-west-2:
      AMI: ami-1d668865
    us-west-1:
      AMI: ami-4a2c192a
    eu-west-2:
      AMI: ami-cb1101af
    eu-west-1:
      AMI: ami-8fcc32f6
    eu-central-1:
      AMI: ami-0460cb6b
    ap-northeast-1:
      AMI: ami-b743bed1
    ap-northeast-2:
      AMI: ami-a5dd70cb
    ap-southeast-2:
      AMI: ami-c1a6bda2
    ap-southeast-1:
      AMI: ami-9d1f7efe
    ca-central-1:
      AMI: ami-b677c9d2
    ap-south-1:
      AMI: ami-ca8ad9a5
    eu-west-3:
      AMI: ami-6fa21412
  Version2Family:
    9.3.12:
      Family: postgres9.3
      MajorVersion: '9.3'
    9.3.14:
      Family: postgres9.3
      MajorVersion: '9.3'
    9.3.16:
      Family: postgres9.3
      MajorVersion: '9.3'
    9.3.17:
      Family: postgres9.3
      MajorVersion: '9.3'
    9.4.7:
      Family: postgres9.4
      MajorVersion: '9.4'
    9.4.9:
      Family: postgres9.4
      MajorVersion: '9.4'
    9.4.11:
      Family: postgres9.4
      MajorVersion: '9.4'
    9.4.12:
      Family: postgres9.4
      MajorVersion: '9.4'
    9.5.2:
      Family: postgres9.5
      MajorVersion: '9.5'
    9.5.4:
      Family: postgres9.5
      MajorVersion: '9.5'
    9.5.6:
      Family: postgres9.5
      MajorVersion: '9.5'
    9.5.7:
      Family: postgres9.5
      MajorVersion: '9.5'
    9.6.1:
      Family: postgres9.6
      MajorVersion: '9.6'
    9.6.2:
      Family: postgres9.6
      MajorVersion: '9.6'
    9.6.3:
      Family: postgres9.6
      MajorVersion: '9.6'
Conditions:
  3az: !Or [!Equals [!Ref 'NumberOfAvailabilityZones', '3'], !Equals [!Ref 'NumberOfAvailabilityZones',
      '4']]
  4az: !Equals [!Ref 'NumberOfAvailabilityZones', '4']
  100GB: !Equals [!Ref 'AllocatedStorageAndIops', '100 GB / 1,000 IOPS']
  300GB: !Equals [!Ref 'AllocatedStorageAndIops', '300 GB / 3,000 IOPS']
  600GB: !Equals [!Ref 'AllocatedStorageAndIops', '600 GB / 6,000 IOPS']
  1000GB: !Equals [!Ref 'AllocatedStorageAndIops', '1,000 GB / 10,000 IOPS']
  1500GB: !Equals [!Ref 'AllocatedStorageAndIops', '1,500 GB / 15,000 IOPS']
  2000GB: !Equals [!Ref 'AllocatedStorageAndIops', '2,000 GB / 20,000 IOPS']
  3000GB: !Equals [!Ref 'AllocatedStorageAndIops', '3,000 GB / 30,000 IOPS']
  4000GB: !Equals [!Ref 'AllocatedStorageAndIops', '4,000 GB / 40,000 IOPS']
Resources:
  ECSCluster:
    Type: AWS::ECS::Cluster
  SSHSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ECS SSH
      VpcId: !Ref 'VPC'
      SecurityGroupIngress:
        - IpProtocol: 'tcp'
          FromPort: 22
          ToPort: 22
          CidrIp: "0.0.0.0/0"
  ClusterSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: AWX ECS cluster hosts
      VpcId: !Ref 'VPC'
      SecurityGroupIngress:
        - SourceSecurityGroupId: !Ref 'ALBSecurityGroup'
          IpProtocol: '-1'
  ECSAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier: !Ref 'ECSSubnets'
      LaunchConfigurationName: !Ref 'ECSLaunchConfiguration'
      MinSize: !Ref 'ClusterSize'
      MaxSize: !Ref 'ClusterSize'
      DesiredCapacity: !Ref 'ClusterSize'
    CreationPolicy:
      ResourceSignal:
        Timeout: PT15M
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MinInstancesInService: 1
        MaxBatchSize: 1
        PauseTime: PT15M
        SuspendProcesses:
          - HealthCheck
          - ReplaceUnhealthy
          - AZRebalance
          - AlarmNotification
          - ScheduledActions
        WaitOnResourceSignals: true
  ECSLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !FindInMap [AWSRegionToAMI, !Ref 'AWS::Region', AMI]
      InstanceType: !Ref 'InstanceType'
      KeyName: !Ref 'KeyPairName'
      SecurityGroups:
        - !GetAtt 'ClusterSecurityGroup.GroupId'
        - !GetAtt 'SSHSecurityGroup.GroupId'
      IamInstanceProfile: !Ref 'ECSInstanceProfile'
      UserData: !Base64
        Fn::Sub: '#!/bin/bash

          yum install -y aws-cfn-bootstrap

          /opt/aws/bin/cfn-init -v --region ${AWS::Region} --stack ${AWS::StackName}
          --resource ECSLaunchConfiguration

          /opt/aws/bin/cfn-signal -e $? --region ${AWS::Region} --stack ${AWS::StackName}
          --resource ECSAutoScalingGroup

          '
    Metadata:
      AWS::CloudFormation::Init:
        config:
          commands:
            01_add_instance_to_cluster:
              command: !Sub 'echo ECS_CLUSTER=${ECSCluster} >> /etc/ecs/ecs.config'
          files:
            /etc/cfn/cfn-hup.conf:
              mode: 256
              owner: root
              group: root
              content: !Sub '[main]

                stack=${AWS::StackId}

                region=${AWS::Region}

                '
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub ['[cfn-auto-reloader-hook]

                  triggers=post.update

                  path=Resources.ECSLaunchConfiguration.Metadata.AWS::CloudFormation::Init

                  ${Param1}', {Param1: !Sub 'action=/opt/aws/bin/cfn-init -v --region
                    ${AWS::Region} --stack ${AWS::StackName} --resource ECSLaunchConfiguration'}]
          services:
            sysvinit:
              cfn-hup:
                enabled: true
                ensureRunning: true
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf
  ECSInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
      Policies:
        - PolicyName: ecs-service
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - ecs:CreateCluster
                  - ecs:DeregisterContainerInstance
                  - ecs:DiscoverPollEndpoint
                  - ecs:Poll
                  - ecs:RegisterContainerInstance
                  - ecs:StartTelemetrySession
                  - ecs:Submit*
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ecr:BatchCheckLayerAvailability
                  - ecr:BatchGetImage
                  - ecr:GetDownloadUrlForLayer
                  - ecr:GetAuthorizationToken
                Resource: '*'
  ECSInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref 'ECSInstanceRole'
  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: AWX ECS Application Load Balancer
      VpcId: !Ref 'VPC'
      SecurityGroupIngress:
        - CidrIp: !Ref 'RemoteAccessCIDR'
          IpProtocol: '-1'
  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets: !Ref 'ALBSubnets'
      SecurityGroups:
        - !Ref 'ALBSecurityGroup'
  AWXTaskECRRepository:
    Type: AWS::ECR::Repository
  AWXWebECRRepository:
    Type: AWS::ECR::Repository
  AWXMemcachedECRRepository:
    Type: AWS::ECR::Repository
  AWXRabbitMQECRRepository:
    Type: AWS::ECR::Repository
  DBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: !If [100GB, '100', !If [300GB, '300', !If [600GB, '600', !If [
              1000GB, '1000', !If [1500GB, '1500', !If [2000GB, '2000', !If [3000GB,
                    '3000', !If [4000GB, '4000', '6000']]]]]]]]
      AllowMajorVersionUpgrade: !Ref 'AllowMajorVersionUpgrade'
      AutoMinorVersionUpgrade: !Ref 'AutoMinorVersionUpgrade'
      DBInstanceClass: !Ref 'DBInstanceClass'
      DBName: !Ref 'DBName'
      DBParameterGroupName: !Ref 'DBParameterGroup'
      DBSubnetGroupName: !Ref 'DBSubnetGroup'
      Engine: postgres
      EngineVersion: !Ref 'EngineVersion'
      Iops: !If [100GB, '1000', !If [300GB, '3000', !If [600GB, '6000', !If [1000GB,
              '10000', !If [1500GB, '15000', !If [2000GB, '20000', !If [3000GB, '30000',
                    !If [4000GB, '40000', '60000']]]]]]]]
      LicenseModel: postgresql-license
      MasterUsername: !Ref 'MasterUsername'
      MasterUserPassword: !Ref 'MasterUserPassword'
      MultiAZ: !Ref 'MultiAZ'
      OptionGroupName: !Ref 'DBOptionGroup'
      Port: !Ref 'PortNumber'
      PubliclyAccessible: !Ref 'PubliclyAccessible'
      StorageType: !Ref 'StorageType'
      VPCSecurityGroups:
        - !Ref 'RDSSecurityGroup'
  DBOptionGroup:
    Type: AWS::RDS::OptionGroup
    Properties:
      EngineName: postgres
      MajorEngineVersion: !FindInMap [Version2Family, !Ref 'EngineVersion', MajorVersion]
      OptionGroupDescription: !Sub 'Application: AWX Database: ${DBName}'
      OptionConfigurations: []
  DBParameterGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties:
      Description: !Sub 'Application: AWX Database: ${DBName}'
      Family: !FindInMap [Version2Family, !Ref 'EngineVersion', Family]
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: !Sub 'Application: AWX Database: ${DBName}'
      SubnetIds:
        - !Select [0, !Ref 'RDSSubnets']
        - !Select [1, !Ref 'RDSSubnets']
        - !If [3az, !Select [2, !Ref 'RDSSubnets'], !Ref 'AWS::NoValue']
        - !If [4az, !Select [3, !Ref 'RDSSubnets'], !Ref 'AWS::NoValue']
  RDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub 'Allow Client connections to Application: AWX Database:
        ${DBName}'
      VpcId: !Ref 'VPC'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref 'PortNumber'
          ToPort: !Ref 'PortNumber'
          CidrIp: !Ref 'RDSAccessCidr'
        - IpProtocol: tcp
          FromPort: !Ref 'PortNumber'
          ToPort: !Ref 'PortNumber'
          CidrIp: '172.17.0.0/24'
      SecurityGroupEgress:
        - IpProtocol: '-1'
          FromPort: '-1'
          ToPort: '-1'
          CidrIp: 0.0.0.0/0
Outputs:
  Cluster:
    Description: A reference to the ECS cluster
    Value: !Ref 'ECSCluster'
  RabbitMQRegistry:
    Description: A reference to the rabbitmq ECR repository
    Value: !Ref 'AWXRabbitMQECRRepository'
  MemcachedRegistry:
    Description: A reference to the memcached ECR repository
    Value: !Ref 'AWXMemcachedECRRepository'
  AWXWebRegistry:
    Description: A reference to the awx_web ECR repository
    Value: !Ref 'AWXWebECRRepository'
  AWXTaskRegistry:
    Description: A reference to the ECR repository
    Value: !Ref 'AWXTaskECRRepository'
  DBEndpoint:
    Description: Database endpoint
    Value: !GetAtt 'DBInstance.Endpoint.Address'
  ALBARN:
    Description: ALB ARN
    Value: !Ref ALB
  ALBDNSName:
    Description: ALB DNSName
    Value: !GetAtt 'ALB.DNSName'
